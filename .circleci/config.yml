version: 2
workflows:
  version: 2
  test:
    jobs:
      - check
      - test-3.6
        requires:
          - check
      - test-3.5
        requires:
          - check
      - test-3.7
        requires:
          - check

jobs:
  check:
    working_directory: ~/pyoupyou
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: create settings
          command: |
            cp pyoupyou/settings/local-test.py pyoupyou/settings/local.py
      - run:
          name: check migrations
          command: |
            . venv/bin/activate
            ./manage.py makemigrations --check

  test-3.6: &test-template
    working_directory: ~/pyoupyou
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: create settings
          command: |
            cp pyoupyou/settings/local-test.py pyoupyou/settings/local.py

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            coverage run manage.py test
            coverage html -d coverage_html
      - store_artifacts:
          path: coverage_html
          destination: coverage_html
      - store_test_results:
          path: test-results
  test-3.5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5

  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
