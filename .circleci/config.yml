version: 2
jobs:
  check:
    working_directory: ~/pyoupyou
    docker:
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: check migrations
          command: |
            pipenv run ./manage.py makemigrations --check
      - run:
          name: check coding style (black)
          command: |
            pipenv run black --check .
      - run:
          name: check safety
          command: |
            PIPENV_PYUP_API_KEY="" pipenv check
      - run:
          name: check requirements.txt is up to date
          command: |
            pipenv lock --requirements > requirements2.txt
            diff requirements.txt requirements2.txt
  test-3.6: &test-template
    working_directory: ~/pyoupyou
    docker:
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: run tests
          command: |
            pipenv run coverage run ./manage.py test
            pipenv run coverage html -d coverage_html
      - store_artifacts:
          path: coverage_html
          destination: coverage_html

  test-3.5:
    working-directory: ~/pyoupyou
    docker:
      - image: circleci/python:3.5
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: install dependencies
          command: |
            sed -i '/black = "==19.3b0"/d' ./Pipfile
            sudo pip install pipenv
            pipenv install --dev

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: run tests
          command: |
            pipenv run coverage run ./manage.py test
            pipenv run coverage html -d coverage_html
      - store_artifacts:
          path: coverage_html
          destination: coverage_html

  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true


workflows:
  version: 2
  test:
    jobs:
      - check
      - test-3.6:
          requires:
            - check
      - test-3.5:
          requires:
            - check
      - test-3.7:
          requires:
            - check
